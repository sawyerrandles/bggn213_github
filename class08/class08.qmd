---
title: "Class 8 Mini Project"
author: "Sawyer Randles, PID: A69034741"
format: pdf
editor: visual
---

```{r}
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)

#wisc.df
```

```{r}
# We can use -1 here to remove the first column
# Had to also remove last column X as it was full of NA and cant be used for PCA
wisc.data <- wisc.df[,c(-1, -32)]
#wisc.data2 <- wisc.data[,-which(names(wisc.data)=="X")]

# Create diagnosis vector for later 
diagnosis <- as.factor(wisc.df$diagnosis)
diagnosis
```

```{r}
table(wisc.df$diagnosis)
```

> Q1. How many observations are in this dataset?

569

```{r}
grep("_mean", colnames(wisc.df))

```

> Q2. How many of the observations have a malignant diagnosis?

212

> Q3. How many variables/features in the data are suffixed with \_mean?

10

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)
```

```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data, scale=TRUE)
```

```{r}
# Look at summary of results
summary(wisc.pr)
```

> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

0.4427

> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

3

> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

7

```{r}
biplot(wisc.pr)
```


> Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

It is unusable because of the labels

```{r}
# Scatter plot observations by components 1 and 2
plot(wisc.pr$x, col = diagnosis , 
     xlab = "PC1", ylab = "PC2")
```
> Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

The first plot has a cleaner cut separating the two subgroups

```{r}
# Repeat for components 1 and 3
plot(wisc.pr$x[, c(1,3) ], col = diagnosis, 
     xlab = "PC1", ylab = "PC3")
```


```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

```{r}
## ggplot based graph
#install.packages("factoextra")
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```

> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.

-0.26085376 - this has the largest value

```{r}
wisc.pr$rotation[,1]
```


```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
```

```{r}
data.dist <- dist(data.scaled)
```

```{r}
wisc.hclust <- hclust(data.dist, method = "complete")
```

> Q10. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

19

```{r}
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k=4)
```

```{r}
table(wisc.hclust.clusters, diagnosis)

```

> Q11. OPTIONAL: Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10? How do you judge the quality of your result in each case?

No - all other numbers of clusters results in clusters that are not very meaningful as they do not contain many samples. 4 is the fewest amount of clusters that results in two main clusters that differentiates between benign and malignant

> Q12. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

ward.D2 allows you to split the data in two based on the dendogram. I am looking for two clusters that reflect a binary relationship between benign and malignant. There are similar amounts of false positives/negatives across groups, but slightly more with ward.D2 (61 vs 68).

```{r}
wisc.hclust <- hclust(data.dist, method = "ward.D2")

plot(wisc.hclust)
abline(h=80, col="red", lty=2)

wisc.hclust.clusters <- cutree(wisc.hclust, k=2)

table(wisc.hclust.clusters, diagnosis)
```
```{r}
# Why do we not scale PCA here? Interesting that scaling messes it up...

pca.dist <- dist(wisc.pr$x[,1:7])

wisc.pr.hclust <- hclust(pca.dist, method = "ward.D2")

plot(wisc.pr.hclust)
abline(h=80, col="red", lty=2)

wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)

table(wisc.pr.hclust.clusters, diagnosis)
```

```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```

```{r}
# Plot using our re-ordered factor 
plot(wisc.pr$x[,1:2], col=g)
```

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
?predict()
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```
> Q16. - 2 is potentially malignant (red)
